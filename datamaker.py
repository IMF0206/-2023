import pandas as pd
import random
import os

# 读取Excel表格
excel_file_path = 'D:\\test\\borrow_ori.xls'
excel_file_readerinfo = 'D:\\test\\readerinfo.xls'
df = pd.read_excel(excel_file_path)
df_reader = pd.read_excel(excel_file_readerinfo)
os.remove('D:\\test\\borrow111.xlsx')

data = {
    '姓名': df_reader['姓名'].values.tolist(),
    '身份证号': df_reader['证件号'].values.tolist(),
    'GL号码': df_reader['条码号'].values.tolist()
}


# # 在data中找到“张静”对应的姓名、身份证号和GL号码
# data = {
#     '姓名': ['孙莹莹', '徐松柏', '陈阳', '韩秋玲', '花修池', '朱子睿', '汤文', '陈常梅', '王菲', '林梦影', '顾祥', '叶海霞', '韩龙涛', '吴宣叶', '张伟', '朱冠宇', '苗润丰', '章国聪', '谢千羽', '刘勐', '魏丹丹', '张建国', '陈亚萍', '吴正根', '韩芳', '殷兆梅', '王闯', '朱雄林', '陈鑫', '张天泽', '吉金山', '蔡迪', '姜海丽', '周凌霄', '周磊', '陈娇', '陈婷', '李文健', '雷小艳', '戎莉', '杨跃庭', '王丹丹', '左海玲', '闫跃霜', '徐婷', '刁国斌', '李向红', '杨丽媛', '王萍', '楚静', '韩媛媛', '李明飞', '张明鹏', '梁文琴', '刘宇轩', '赵小健', '马云花', '张敏', '王德塣', '夏咸秀', '董昌鸣', '孔培培', '孙兴苓', '谷晓艳', '姜传朔', '康宁', '袁炜', '谭福英', '郑雪娟', '顾维星', '徐力', '刘倩倩', '刘玲', '钱进', '孙茹婕', '胡彧诚', '韩玲', '杜姜茹', '杜成月', '左成玉', '白利娜', '邵敏', '戴寒', '杨晶', '管乐', '唐敏', '孟丽萍', '高夫红', '徐芳', '鲍御玺', '张韵', '黄秀荣', '桂炳乾', '刘代忠', '许梦姣', '刘雪', '费红梅', '庄桂华', '胡鑫怡', '咸兰山', '吴薇', '万党林', '蒋桂红', '张娟', '吉宁', '赵杰', '李怀辉', '王贺', '谢丹丹', '张兴荣', '杜璇', '王璨', '翟延玲', '梅婕', '石蕾', '刘雨涵', '刘春', '刘凌慧', '叶子仪', '黄泽宇', '王敏', '吕婧文', '周亚婷', '韩莹', '王平', '蒋萍', '王鼎天', '徐军', '周月红', '米旋', '张静', '梅佳', '张华', '许芯', '沈聪', '周云', '姚妍姿', '党秀', '孙林林', '于珍珍', '方雨禾', '胡志霞', '冯笠', '王文艳', '王展', '贺琳琳', '周静', '严涵', '李康', '刘逸诺'],
#     '身份证号': ['341221199111251543', '321281199005191877', '321002199502154923', '321281199006285189', '320324198611201716',
#     '321002201412260079', '321011199412141228', '320981199307034460', '32108819890923340X', '220102198810105943',
#     '321027198205245717', '321283198301019025', '610324198808302536', '321023201311020043', '320982198810135789',
#     '321088201409050177', '230108198301240637', '330327198204307733', '321002201301103329', '321011198907081218',
#     '321322199105065822', '130322197911303615', '321027199102286924', '321027198212133318', '321002198704134627',
#     '321088196407154681', '411303198611025610', '42102319890506793X', '321027198603080639', '321002201411100057',
#     '320803201207042813', '321011199501171242', '321023198901185820', '321002201209040628', '321027198606126014',
#     '321011199405211224', '321011198910121225', '321088199104130491', '420621198410131249', '321084198605255524',
#     '321027198206206920', '32100219900603616X', '320923199108025744', '321088199012102223', '321027199111213321',
#     '321011197211181515', '320483199007017023', '320831199208031820', '420527199006052626', '321023199203301227',
#     '321088199111153966', '321011198804191238', '21028219840124661X', '321088196501210061', '321002201412060114',
#     '32128119840301242X', '320323197910113424', '320722198604218121', '61050220100122081X', '321088197004185461',
#     '32100219891229705X', '412728198505157222', '370421195802093844', '320826199211120823', '321002201201242719',
#     '210903198806260527', '321027198908280666', '321011197206190628', '110106196505312728', '3212832199301040814',
#     '321088199402043951', '321088199402024865', '321088199302013982', '321027199001200626', '32100120070630112X',
#     '33010920131130431X', '321088198812093789', '321322199006066504', '321088198804243142', '320923198810044422X',
#     '410328198706071544', '321027198409253321', '321084201201065518', '321011198808120920', '321088198611045465',
#     '321027196910016320', '610322198708083660', '371321197904285841', '320401199011113726', '340823201511111560',
#     '321088199408037325', '321281198508110341', '321088198305201378', '321088198509293796', '32101119930906122X',
#     '410225199410239862', '320822198207095426', '321088198710013987', '321002201509250045', '371327198710230052',
#     '321088199210256143', '321028196809177222', '320321198105193865', '321084198706287226', '321020197506240320',
#     '321027198702193911', '320923198604126339', '320324199209012516', '321088199009252028', '320724198803132446',
#     '321002199005116424', '321011199005241221', '321281199103164223', '321002198401205520', '321088198812114682',
#     '320922199109036326', '321027198103250312', '321088198908090021', '321283201109030149', '321002201307060614',
#     '32102719920806182X', '321001201702160029', '320621198901234724', '321088198504280507', '320682198708175622', '321281198807163064', '321002201409280159', '321002198706034339',
# '321011196408181223', '32100219890411062X', '321002199706052427', '320113198801070024', '321322198610162469',
# '321284199103244425', '321281198901163220', '321002199404025829', '321002201110032425', '130626198901048186',
# '320922198803167348', '321003198701286621', '320102197007102419', '320822198208264228', '321088199111278136',
# '320831198712061645', '320924198802024145', '321088198705148123', '321088198709185124', '321002201905060016',
# '321027198611296317', '321203201310220102'],
#     'GL号码': ['GL60023321', 'GL60022946', 'GL60022238', 'GL60023190', 'GL60023867', 'GL60022476', 'GL60023334',
#     'GL60022999', 'GL60023267', 'GL60023213', 'GL60022419', 'GL60023948', 'GL60023326', 'GL60023753',
#     'GL60023802', 'GL60023601', 'GL60022553', 'GL60022920', 'GL60022371', 'GL60023990', 'GL60023829',
#     'GL60023681', 'GL60023646', 'GL60023830', 'GL60023975', 'GL60023834', 'GL60022627', 'GL60022707',
#     'GL60022677', 'GL60023647', 'GL60023816', 'GL60023574', 'GL60022899', 'GL60023673', 'GL60023667',
#     'GL60022570', 'GL60023050', 'GL60023588', 'GL60022367', 'GL60022195', 'GL60023701', 'GL60023916',
#     'GL60023820', 'GL60022459', 'GL60022885', 'GL60023819', 'GL60023030', 'GL60023086', 'GL60023319',
#     'GL60023452', 'GL60023590', 'GL60023906', 'GL60022889', 'GL60023888', 'GL60022691', 'GL60023782',
#     'GL60023175', 'GL60023852', 'GL60023862', 'GL60023031', 'GL60023799', 'GL60023861', 'GL60023140',
#     'GL60023148', 'GL60023367', 'GL60022929', 'GL60023668', 'GL60023335', 'GL60022911', 'GL60022952',
#     'GL60023021', 'GL60023956', 'GL60023022', 'GL60022535', 'GL60023493', 'GL60023205', 'GL60023515',
#     'GL60023182', 'GL60022771', 'GL60022629', 'GL60022304', 'GL60023669', 'GL60022322', 'GL60022725',
#     'GL60022774', 'GL60022851', 'GL60023274', 'GL60023269', 'GL60023685', 'GL60022338', 'GL60022351',
#     'GL60023633', 'GL60023596', 'GL60022183', 'GL60022649', 'GL60023943', 'GL60022170', 'GL60023328',
#     'GL60022538', 'GL60023308', 'GL60023340', 'GL60022600', 'GL60021854', 'GL60022295', 'GL60023869',
#     'GL60023215', 'GL60023707', 'GL60023209', 'GL60022339', 'GL60023664', 'GL60023214', 'GL60023236',
#     'GL60023218', 'GL60023702', 'GL60023248', 'GL60023463', 'GL60023051', 'GL60023078', 'GL60022958',
#     'GL60022991', 'GL60023122', 'GL60023101', 'GL60023561', 'GL60022972', 'GL60023675', 'GL60023609',
#     'GL60023880', 'GL60023993', 'GL60022969', 'GL60023453', 'GL60022151', 'GL60022917', 'GL60023042',
#     'GL60023046', 'GL60023562', 'GL60023113', 'GL60023317', 'GL60023460', 'GL60022465', 'GL60023151',
#     'GL60023551', 'GL60023967', 'GL60023766', 'GL60023203', 'GL60023822', 'GL60022529', 'GL60022536',
#     'GL60022666', 'GL60022760', 'GL60023179']
# }

# 遍历每行
for index, row in df.iterrows():
    # 判断是否包含"张静"
    if '张静' or '张小橘' or '袁鑫雨' or '袁心宇' or '汪增珠' or '张小雯' or '张雯' or '彭家陵' or '彭彭' or '严慧璇' or '严甜甜' or '臧芷莘' or '臧传君' or '王小幸' or '王成' or '毕祎璠' or '毕然' or '邹衍' or '邹旻' or '谈婷婷' or '谈音' or '史慧敏' or '史然' or '周彦希' or '周小扬' or '王一' or '王璇' or '李姿慧' or '李焓熠' or '陈秋晗' or '陈秋晗棒棒' or '张泽汐' or '张梅芳' or '高启蔷' or '高心悦' in row.values:
        # print(index)
        # print(row)
        # 在data中找到相应的索引
        # index_of_zhangjing = data['姓名'].index(row['姓名'])
        
        # 使用索引在data中获取相应的姓名、身份证号和GL号码
        name = random.choice(data['姓名'])
        index_replace = data['姓名'].index(name)
        # print(index_replace)
        replacement_data = {
            '姓名': name,
            '身份证号': data['身份证号'][index_replace],
            'GL号码': data['GL号码'][index_replace]
        }
        # print(replacement_data)
        
        # 替换相应的行
        df.loc[index, '姓名'] = replacement_data['姓名']
        df.loc[index, '证件号'] = replacement_data['身份证号']
        df.loc[index, '身份证号'] = replacement_data['身份证号']
        df.loc[index, '读者条码号'] = replacement_data['GL号码']

# 打印更新后的表格
# print(df)

# 将更新后的数据保存回Excel文件
df.to_excel('D:\\test\\borrow111.xlsx', index=False)